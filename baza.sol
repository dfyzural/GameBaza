
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "Game.sol";



// This is class that describes you smart contract.
contract baza is Game {

    mapping (uint => address) unitsList;
    uint iList;

    constructor() public {
        // Check that contract's public key is set
        require(tvm.pubkey() != 0, 101);
        // Check that message has signature (msg.pubkey() is not zero) and
        // message is signed with the owner's private key
        require(msg.pubkey() == tvm.pubkey(), 102);
        
        defence = 30;
        health = 100;
        iList = 0;

        tvm.accept();

      //  timestamp = now;
    }

    function addUnit() public {
        unitsList.add(iList, msg.sender);
        iList++;

        tvm.accept();
    }

    function delUnit() external {
        optional(uint, address) currentOpt = unitsList.min();
        
        while (currentOpt.hasValue()){
            (uint key, address addr) = currentOpt.get();
            if(addr == msg.sender){
                delete unitsList[key];
            }
            currentOpt = unitsList.next(key);
            tvm.accept();
        }
    }


    function getUnitsList() public view returns (address[]){
        optional(uint, address) currentOpt = unitsList.min();
        address[] lst;

        while (currentOpt.hasValue()){
            (uint key, address addr) = currentOpt.get();
            lst.push(addr);
            currentOpt = unitsList.next(key);

        }
        return lst;
        //tvm.accept();
    }

    function destruction() public override{
        // смерть юнитов
        optional(uint, address) currentOpt = unitsList.min();
        while (currentOpt.hasValue()){
            (uint key, address addr) = currentOpt.get();
            unitInt(addr).deathBase(killerAddr);
            currentOpt = unitsList.next(key);
            tvm.accept();
        }

    }
}
